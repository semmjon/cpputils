stages:
  - build
  - test
  - publish

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  TWINE_USERNAME: $TWINE_USERNAME
  TWINE_PASSWORD: $TWINE_PASSWORD

.get_tag_version: &get_tag_version
  before_script:
    - VERSION=$(curl -Ss --request GET --header "PRIVATE-TOKEN: <REPLACE_BY_A_VARIABLE>" "https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/repository/tags" | jq -r '.[0] | .name')
    - test -z "$VERSION" && echo "no version tag found" && exit 1

.python_build_before_script: &python_build_before_script
  before_script:
  - python3.8 -m pip install --upgrade pip
  - python3.8 -m pip install virtualenv
  - python3.8 -m venv ./venv38
  - python3.10 -m pip install --upgrade pip
  - python3.10 -m pip install virtualenv
  - python3.10 -m venv ./venv310
  - source venv38/bin/activate
  - python -m pip install build
  - python -m pip install pytest
  - source venv310/bin/activate
  - python -m pip install build
  - python -m pip install pytest
  - python -m pip install auditwheel
  - python -m pip install twine
  - cat $PYPIRC > /root/.pypirc

.build_before_script: &build_before_script
  before_script:
    - ldd --version ldd  # For debugging
    - python3.8 --version  # For debugging
    - python3.10 --version  # For debugging
  <<:
    - *get_tag_version
    - *python_build_before_script

.before_script: &before_script
  <<: *build_before_script

build_manylinux1_x86_64:
  <<: *before_script
  image: quay.io/pypa/manylinux2014_x86_64:latest
  #when: manual
  stage: build
  script:
    - source venv38/bin/activate
    - python -m build
    - source venv310/bin/activate
    - python -m build
  artifacts:
    paths:
      - dist/*.whl

test_manylinux1_x86_64:
  <<: *python_build_before_script
  image: quay.io/pypa/manylinux2014_x86_64:latest
  #when: manual
  stage: test
  script:
    - source venv38/bin/activate
    - pip install $(ls dist/*38*.whl)
    - python -m pytest
    - source venv310/bin/activate
    - pip install $(ls dist/*310*.whl)
    - python -m pytest
  needs:
    - job: build_manylinux1_x86_64
      artifacts: true

publish_manylinux1_x86_64:
  <<: *python_build_before_script
  image: quay.io/pypa/manylinux2014_x86_64:latest
  # when: manual
  stage: publish
  only:
    - tags
  script:
    - source venv310/bin/activate
    - python -m auditwheel repair $(ls dist/*38*.whl)
    - python -m auditwheel repair $(ls dist/*310*.whl)
    - python -m twine upload -r pypi $(ls wheelhouse/*38*.whl) --verbose
    - python -m twine upload -r pypi $(ls wheelhouse/*310*.whl) --verbose
  needs:
    - job: build_manylinux1_x86_64
      artifacts: true
    - job: test_manylinux1_x86_64

publish_windows:
  image: quay.io/winamd64/python:latest
  when: manual
  script:
    - echo BLA

push_to_github:
  image: alpine/git
  stage: publish
  #when: manual
  before_script:
    - git config --global user.email $GITHUB_EMAIL
    - git config --global user.name $GITHUB_USERNAME
  script:
    - git clone https://$GITLAB_USER:$GITLAB_TOKEN@gitlab.blubblub.tech/sgeist/cpputils.git
    - cd cpputils
    - git checkout $CI_COMMIT_REF_NAME
    - git remote set-url origin https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/semmjon/cpputils.git
    - git add .
    - git commit -m "$CI_COMMIT_MESSAGE" || echo "nothing to commit!"
    - git push -f $(if [ -z ${CI_COMMIT_TAG+x} ]; then echo ""; else echo "origin HEAD:'$var'"; fi)

  needs:
    - job: build_manylinux1_x86_64
      artifacts: true
    - job: test_manylinux1_x86_64
